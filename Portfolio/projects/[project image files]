class DownloadManager {
  constructor() {
    this.isDownloading = false;
    this.overlay = null;
    this.progressBar = null;
    this.progressText = null;
    this.syncIcon = null;
    this.contentDiv = null;

    this.init();
  }

  init() {
    this.createProgressOverlay();
    this.bindDownloadButtons();
    this.bindKeyboardEvents();
    this.showInitialDownloadOverlay(); // Show overlay on page load
  }

  showInitialDownloadOverlay() {
    // Show the progress overlay immediately when the page loads
    this.showProgress();
    this.simulateInitialDownload(); // Simulate the initial download process
  }

  async simulateInitialDownload() {
    // Simulate a short download process
    const steps = [
      { progress: 0, text: "Initializing..." },
      { progress: 50, text: "Loading resources..." },
      { progress: 100, text: "Setup complete!" },
    ];

    for (const step of steps) {
      await this.updateProgress(step.progress, step.text);
      await this.delay(1000); // Wait for 1 second between steps
    }

    // Hide the overlay after the simulation
    setTimeout(() => {
      this.hideProgress();
    }, 500); // Wait for half a second before hiding
  }

  // ... (rest of the existing methods remain unchanged)
}